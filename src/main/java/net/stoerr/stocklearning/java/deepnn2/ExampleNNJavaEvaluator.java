package net.stoerr.stocklearning.java.deepnn2;

/**
 * Created by hps on 21.09.2015.
 */
public class ExampleNNJavaEvaluator extends AbstractNNJavaEvaluator {

    public void run() {
        final int id = getGlobalId();
        final int inOffset = id*inSubSize;
        final int outOffset = id*outSubSize;
        final int memOffset = id*memSubSize;
        final int resOffset = id*resSubSize;

        mem[memOffset + 0] = 1.0f;
        mem[memOffset + 1] = in[inOffset + 0]*w[1] + in[inOffset + 1]*w[2] + mem[memOffset + 0]*w[0];
        mem[memOffset + 2] = in[inOffset + 0]*w[4] + in[inOffset + 1]*w[5] + mem[memOffset + 0]*w[3];
        mem[memOffset + 3] = mem[memOffset + 1] / (1 + abs(mem[memOffset + 1]));
        mem[memOffset + 4] = mem[memOffset + 2] / (1 + abs(mem[memOffset + 2]));
        mem[memOffset + 5] = 1 / ((1 + abs(mem[memOffset + 1])) * (1 + abs(mem[memOffset + 1])));
        mem[memOffset + 6] = 1 / ((1 + abs(mem[memOffset + 2])) * (1 + abs(mem[memOffset + 2])));
        mem[memOffset + 1] = mem[memOffset + 3]*w[7] + mem[memOffset + 4]*w[8] + mem[memOffset + 0]*w[6];
        mem[memOffset + 2] = mem[memOffset + 3]*w[10] + mem[memOffset + 4]*w[11] + mem[memOffset + 0]*w[9];
        mem[memOffset + 7] = in[inOffset + 0] * mem[memOffset + 5];
        mem[memOffset + 8] = in[inOffset + 0] * mem[memOffset + 6];
        mem[memOffset + 9] = in[inOffset + 1] * mem[memOffset + 5];
        mem[memOffset + 10] = in[inOffset + 1] * mem[memOffset + 6];
        mem[memOffset + 11] = mem[memOffset + 7] * w[7];
        mem[memOffset + 12] = mem[memOffset + 7] * w[10];
        mem[memOffset + 13] = mem[memOffset + 8] * w[8];
        mem[memOffset + 14] = mem[memOffset + 8] * w[11];
        mem[memOffset + 15] = mem[memOffset + 9] * w[7];
        mem[memOffset + 16] = mem[memOffset + 9] * w[10];
        mem[memOffset + 17] = mem[memOffset + 10] * w[8];
        mem[memOffset + 18] = mem[memOffset + 10] * w[11];
        mem[memOffset + 19] = mem[memOffset + 5] * w[7];
        mem[memOffset + 20] = mem[memOffset + 5] * w[10];
        mem[memOffset + 21] = mem[memOffset + 6] * w[8];
        mem[memOffset + 22] = mem[memOffset + 6] * w[11];
        mem[memOffset + 23] = 1 / ((1 + abs(mem[memOffset + 1])) * (1 + abs(mem[memOffset + 1])));
        mem[memOffset + 24] = 1 / ((1 + abs(mem[memOffset + 2])) * (1 + abs(mem[memOffset + 2])));
        mem[memOffset + 5] = mem[memOffset + 11] * mem[memOffset + 23];
        mem[memOffset + 6] = mem[memOffset + 12] * mem[memOffset + 24];
        mem[memOffset + 7] = mem[memOffset + 13] * mem[memOffset + 23];
        mem[memOffset + 8] = mem[memOffset + 14] * mem[memOffset + 24];
        mem[memOffset + 9] = mem[memOffset + 15] * mem[memOffset + 23];
        mem[memOffset + 10] = mem[memOffset + 16] * mem[memOffset + 24];
        mem[memOffset + 25] = mem[memOffset + 17] * mem[memOffset + 23];
        mem[memOffset + 26] = mem[memOffset + 18] * mem[memOffset + 24];
        mem[memOffset + 27] = mem[memOffset + 1] / (1 + abs(mem[memOffset + 1]));
        mem[memOffset + 28] = mem[memOffset + 2] / (1 + abs(mem[memOffset + 2]));
        mem[memOffset + 29] = mem[memOffset + 19] * mem[memOffset + 23];
        mem[memOffset + 30] = mem[memOffset + 20] * mem[memOffset + 24];
        mem[memOffset + 31] = mem[memOffset + 21] * mem[memOffset + 23];
        mem[memOffset + 32] = mem[memOffset + 22] * mem[memOffset + 24];
        mem[memOffset + 1] = mem[memOffset + 27]*w[13] + mem[memOffset + 28]*w[14] + mem[memOffset + 0]*w[12];
        mem[memOffset + 2] = -1.0f;
        mem[memOffset + 11] = mem[memOffset + 5] * w[13];
        mem[memOffset + 12] = mem[memOffset + 6] * w[14];
        mem[memOffset + 13] = mem[memOffset + 7] * w[13];
        mem[memOffset + 14] = mem[memOffset + 8] * w[14];
        mem[memOffset + 15] = mem[memOffset + 9] * w[13];
        mem[memOffset + 16] = mem[memOffset + 10] * w[14];
        mem[memOffset + 17] = mem[memOffset + 25] * w[13];
        mem[memOffset + 18] = mem[memOffset + 26] * w[14];
        mem[memOffset + 19] = mem[memOffset + 3] * mem[memOffset + 23];
        mem[memOffset + 20] = mem[memOffset + 3] * mem[memOffset + 24];
        mem[memOffset + 21] = mem[memOffset + 4] * mem[memOffset + 23];
        mem[memOffset + 22] = mem[memOffset + 4] * mem[memOffset + 24];
        mem[memOffset + 33] = mem[memOffset + 29] * w[13];
        mem[memOffset + 34] = mem[memOffset + 30] * w[14];
        mem[memOffset + 35] = mem[memOffset + 31] * w[13];
        mem[memOffset + 36] = mem[memOffset + 32] * w[14];
        mem[memOffset + 0] = mem[memOffset + 11] + mem[memOffset + 12];
        mem[memOffset + 3] = mem[memOffset + 13] + mem[memOffset + 14];
        mem[memOffset + 4] = mem[memOffset + 15] + mem[memOffset + 16];
        mem[memOffset + 5] = mem[memOffset + 17] + mem[memOffset + 18];
        mem[memOffset + 6] = mem[memOffset + 33] + mem[memOffset + 34];
        mem[memOffset + 7] = mem[memOffset + 35] + mem[memOffset + 36];
        mem[memOffset + 8] = mem[memOffset + 2] * out[outOffset + 0];
        mem[memOffset + 9] = mem[memOffset + 19] * w[13];
        mem[memOffset + 10] = mem[memOffset + 20] * w[14];
        mem[memOffset + 25] = mem[memOffset + 21] * w[13];
        mem[memOffset + 26] = mem[memOffset + 22] * w[14];
        mem[memOffset + 29] = mem[memOffset + 1] / (1 + abs(mem[memOffset + 1]));
        mem[memOffset + 30] = mem[memOffset + 23] * w[13];
        mem[memOffset + 31] = mem[memOffset + 24] * w[14];
        mem[memOffset + 32] = 1 / ((1 + abs(mem[memOffset + 1])) * (1 + abs(mem[memOffset + 1])));
        mem[memOffset + 1] = mem[memOffset + 8] + mem[memOffset + 29];
        mem[memOffset + 2] = mem[memOffset + 0] * mem[memOffset + 32];
        mem[memOffset + 11] = mem[memOffset + 3] * mem[memOffset + 32];
        mem[memOffset + 12] = mem[memOffset + 4] * mem[memOffset + 32];
        mem[memOffset + 13] = mem[memOffset + 5] * mem[memOffset + 32];
        mem[memOffset + 14] = mem[memOffset + 6] * mem[memOffset + 32];
        mem[memOffset + 15] = mem[memOffset + 7] * mem[memOffset + 32];
        mem[memOffset + 16] = mem[memOffset + 9] * mem[memOffset + 32];
        mem[memOffset + 17] = mem[memOffset + 10] * mem[memOffset + 32];
        mem[memOffset + 18] = mem[memOffset + 25] * mem[memOffset + 32];
        mem[memOffset + 19] = mem[memOffset + 26] * mem[memOffset + 32];
        mem[memOffset + 20] = mem[memOffset + 27] * mem[memOffset + 32];
        mem[memOffset + 21] = mem[memOffset + 28] * mem[memOffset + 32];
        mem[memOffset + 22] = mem[memOffset + 30] * mem[memOffset + 32];
        mem[memOffset + 23] = mem[memOffset + 31] * mem[memOffset + 32];
        mem[memOffset + 0] = mem[memOffset + 1] * mem[memOffset + 2];
        mem[memOffset + 3] = mem[memOffset + 1] * mem[memOffset + 11];
        mem[memOffset + 4] = mem[memOffset + 1] * mem[memOffset + 12];
        mem[memOffset + 5] = mem[memOffset + 1] * mem[memOffset + 13];
        mem[memOffset + 6] = mem[memOffset + 1] * mem[memOffset + 14];
        mem[memOffset + 7] = mem[memOffset + 1] * mem[memOffset + 15];
        mem[memOffset + 8] = mem[memOffset + 1] * mem[memOffset + 16];
        mem[memOffset + 9] = mem[memOffset + 1] * mem[memOffset + 17];
        mem[memOffset + 10] = mem[memOffset + 1] * mem[memOffset + 18];
        mem[memOffset + 25] = mem[memOffset + 1] * mem[memOffset + 19];
        mem[memOffset + 26] = mem[memOffset + 1] * mem[memOffset + 20];
        mem[memOffset + 27] = mem[memOffset + 1] * mem[memOffset + 21];
        mem[memOffset + 28] = mem[memOffset + 1] * mem[memOffset + 22];
        mem[memOffset + 29] = mem[memOffset + 1] * mem[memOffset + 23];
        mem[memOffset + 30] = mem[memOffset + 1] * mem[memOffset + 32];
        mem[memOffset + 31] = 2.0f;
        res[resOffset + 0] = mem[memOffset + 0] * mem[memOffset + 31];
        res[resOffset + 1] = mem[memOffset + 3] * mem[memOffset + 31];
        res[resOffset + 2] = mem[memOffset + 4] * mem[memOffset + 31];
        res[resOffset + 3] = mem[memOffset + 5] * mem[memOffset + 31];
        res[resOffset + 4] = mem[memOffset + 6] * mem[memOffset + 31];
        res[resOffset + 5] = mem[memOffset + 7] * mem[memOffset + 31];
        res[resOffset + 6] = mem[memOffset + 8] * mem[memOffset + 31];
        res[resOffset + 7] = mem[memOffset + 9] * mem[memOffset + 31];
        res[resOffset + 8] = mem[memOffset + 10] * mem[memOffset + 31];
        res[resOffset + 9] = mem[memOffset + 25] * mem[memOffset + 31];
        res[resOffset + 10] = mem[memOffset + 26] * mem[memOffset + 31];
        res[resOffset + 11] = mem[memOffset + 27] * mem[memOffset + 31];
        res[resOffset + 12] = mem[memOffset + 28] * mem[memOffset + 31];
        res[resOffset + 13] = mem[memOffset + 29] * mem[memOffset + 31];
        res[resOffset + 14] = mem[memOffset + 30] * mem[memOffset + 31];
        res[resOffset + 15] = mem[memOffset + 1]*mem[memOffset + 1];

    }

}
