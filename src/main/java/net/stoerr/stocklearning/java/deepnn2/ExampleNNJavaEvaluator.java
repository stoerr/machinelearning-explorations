package net.stoerr.stocklearning.java.deepnn2;

import java.lang.Math.*;

/**
 * Created by hps on 21.09.2015.
 */
public class ExampleNNJavaEvaluator extends AbstractNNJavaEvaluator {


    public void run() {
        int id = getGlobalId();
        float in[] = allInputs[id];
        float out[] = allOutputs[id];
        float res[] = allRes[id];
        float mem[] = allMem[id];

        mem[0] = 1.0f;
        mem[1] = in[0]*w[1] + in[1]*w[2] + mem[0]*w[0];
        mem[2] = in[0]*w[4] + in[1]*w[5] + mem[0]*w[3];
        mem[3] = mem[1] / (1 + abs(mem[1]));
        mem[4] = mem[2] / (1 + abs(mem[2]));
        mem[5] = 1 / ((1 + abs(mem[1])) * (1 + abs(mem[1])));
        mem[6] = 1 / ((1 + abs(mem[2])) * (1 + abs(mem[2])));
        mem[1] = mem[3]*w[7] + mem[4]*w[8] + mem[0]*w[6];
        mem[2] = mem[3]*w[10] + mem[4]*w[11] + mem[0]*w[9];
        mem[7] = in[0] * mem[5];
        mem[8] = in[0] * mem[6];
        mem[9] = in[1] * mem[5];
        mem[10] = in[1] * mem[6];
        mem[11] = mem[7] * w[7];
        mem[12] = mem[7] * w[10];
        mem[13] = mem[8] * w[8];
        mem[14] = mem[8] * w[11];
        mem[15] = mem[9] * w[7];
        mem[16] = mem[9] * w[10];
        mem[17] = mem[10] * w[8];
        mem[18] = mem[10] * w[11];
        mem[19] = mem[5] * w[7];
        mem[20] = mem[5] * w[10];
        mem[21] = mem[6] * w[8];
        mem[22] = mem[6] * w[11];
        mem[23] = 1 / ((1 + abs(mem[1])) * (1 + abs(mem[1])));
        mem[24] = 1 / ((1 + abs(mem[2])) * (1 + abs(mem[2])));
        mem[5] = mem[11] * mem[23];
        mem[6] = mem[12] * mem[24];
        mem[7] = mem[13] * mem[23];
        mem[8] = mem[14] * mem[24];
        mem[9] = mem[15] * mem[23];
        mem[10] = mem[16] * mem[24];
        mem[25] = mem[17] * mem[23];
        mem[26] = mem[18] * mem[24];
        mem[27] = mem[1] / (1 + abs(mem[1]));
        mem[28] = mem[2] / (1 + abs(mem[2]));
        mem[29] = mem[19] * mem[23];
        mem[30] = mem[20] * mem[24];
        mem[31] = mem[21] * mem[23];
        mem[32] = mem[22] * mem[24];
        mem[1] = mem[27]*w[13] + mem[28]*w[14] + mem[0]*w[12];
        mem[2] = -1.0f;
        mem[11] = mem[5] * w[13];
        mem[12] = mem[6] * w[14];
        mem[13] = mem[7] * w[13];
        mem[14] = mem[8] * w[14];
        mem[15] = mem[9] * w[13];
        mem[16] = mem[10] * w[14];
        mem[17] = mem[25] * w[13];
        mem[18] = mem[26] * w[14];
        mem[19] = mem[3] * mem[23];
        mem[20] = mem[3] * mem[24];
        mem[21] = mem[4] * mem[23];
        mem[22] = mem[4] * mem[24];
        mem[33] = mem[29] * w[13];
        mem[34] = mem[30] * w[14];
        mem[35] = mem[31] * w[13];
        mem[36] = mem[32] * w[14];
        mem[0] = mem[11] + mem[12];
        mem[3] = mem[13] + mem[14];
        mem[4] = mem[15] + mem[16];
        mem[5] = mem[17] + mem[18];
        mem[6] = mem[33] + mem[34];
        mem[7] = mem[35] + mem[36];
        mem[8] = mem[2] * out[0];
        mem[9] = mem[19] * w[13];
        mem[10] = mem[20] * w[14];
        mem[25] = mem[21] * w[13];
        mem[26] = mem[22] * w[14];
        mem[29] = mem[1] / (1 + abs(mem[1]));
        mem[30] = mem[23] * w[13];
        mem[31] = mem[24] * w[14];
        mem[32] = 1 / ((1 + abs(mem[1])) * (1 + abs(mem[1])));
        mem[1] = mem[8] + mem[29];
        mem[2] = mem[0] * mem[32];
        mem[11] = mem[3] * mem[32];
        mem[12] = mem[4] * mem[32];
        mem[13] = mem[5] * mem[32];
        mem[14] = mem[6] * mem[32];
        mem[15] = mem[7] * mem[32];
        mem[16] = mem[9] * mem[32];
        mem[17] = mem[10] * mem[32];
        mem[18] = mem[25] * mem[32];
        mem[19] = mem[26] * mem[32];
        mem[20] = mem[27] * mem[32];
        mem[21] = mem[28] * mem[32];
        mem[22] = mem[30] * mem[32];
        mem[23] = mem[31] * mem[32];
        mem[0] = mem[1] * mem[2];
        mem[3] = mem[1] * mem[11];
        mem[4] = mem[1] * mem[12];
        mem[5] = mem[1] * mem[13];
        mem[6] = mem[1] * mem[14];
        mem[7] = mem[1] * mem[15];
        mem[8] = mem[1] * mem[16];
        mem[9] = mem[1] * mem[17];
        mem[10] = mem[1] * mem[18];
        mem[25] = mem[1] * mem[19];
        mem[26] = mem[1] * mem[20];
        mem[27] = mem[1] * mem[21];
        mem[28] = mem[1] * mem[22];
        mem[29] = mem[1] * mem[23];
        mem[30] = mem[1] * mem[32];
        mem[31] = 2.0f;
        res[0] = mem[0] * mem[31];
        res[1] = mem[3] * mem[31];
        res[2] = mem[4] * mem[31];
        res[3] = mem[5] * mem[31];
        res[4] = mem[6] * mem[31];
        res[5] = mem[7] * mem[31];
        res[6] = mem[8] * mem[31];
        res[7] = mem[9] * mem[31];
        res[8] = mem[10] * mem[31];
        res[9] = mem[25] * mem[31];
        res[10] = mem[26] * mem[31];
        res[11] = mem[27] * mem[31];
        res[12] = mem[28] * mem[31];
        res[13] = mem[29] * mem[31];
        res[14] = mem[30] * mem[31];
        res[15] = mem[1]*mem[1];

    }
}
